---
title: Scrape Reddit Posts
jupyter: python3
---

```{python}
from CryptoFraudDetection.utils.enums import ScraperNotebookMode, LoggerMode
from CryptoFraudDetection.utils.logger import Logger
from CryptoFraudDetection.scraper.reddit import RedditScraper
from CryptoFraudDetection.elasticsearch.data_insertion import insert_dataframe

import pandas as pd

logger = Logger(name="scrape_reddit", level=LoggerMode.DEBUG, log_dir="../logs")
```

```{python}
subreddits: list[str] = [
    "r/CryptoCurrency",
    "r/CryptoMoonShots",
    "r/CryptoMarkets",
    "r/Crypto",
    "r/Ethereum",
    "r/Bitcoin",
    "r/btc",
    "r/litecoin",
    "r/ethtrader",
    "r/Ripple",
    "r/BitcoinMarkets",
    "r/altcoin",
    "r/binance",
]

coins: list[str] = [
    "Bitcoin",
    "BTC",
    "Ethereum",
    "ETH",
    "Cosmos",
    "ATOM",
    "Avalanche",
    "AVAX",
    "FTX Token",
    "FTT",
    "Terra Luna Classic",
    "Terra Luna",
    "Terra Classic",
    "LUNC",
    "Squid-Game-Coin",
    "SQUID",
    "BeerCoin",
    "BEER",
    "BitForex",
    "BF",
    "BeerCoin",
    "BEER",
    "Safe Moon",
    "SAFEMOON",
    "Teddy Doge",
    "TEDDY V2",
    "STOA Network",
    "STA",
    "Chainlink",
    "LINK",
    "Polkadot",
    "DOT",
    "Solana",
    "SOL",
    "THORChain",
    "RUNE",
    "Avalanche",
    "AVAX",
    "Algorand",
    "ALGO",
    "Polygon",
    "MATIC",
    "Cardano",
    "ADA",
    "VeChain",
    "VET",
]
```

Testing until reddit blocks:

```{python}
for wait_range in ((2, 4), (1, 2), (0.5, 1), (0.25, 0.5), (0.115, 0.25)):
    for sub in subreddits[:3]:
        for coin in coins[:3]:
            try:
                scraper = RedditScraper(logger, wait_range=wait_range)
                logger.info(f"Scraping subreddit: {sub}, coin: {coin} with wait range: {wait_range}")

                data: pd.DataFrame = scraper.scrape(sub, coin)

                if data.empty or "error" in data.columns:
                    raise(f"Blocked or empty data for subreddit: {sub}, coin: {coin} with wait range: {wait_range}")

            except Exception as e:
                raise(f"Error occurred for subreddit: {sub}, coin: {coin} with wait range: {wait_range}: {e}")
```

```{python}
for sub in subreddits:
    for coin in coins:
        scraper = RedditScraper(logger, wait_range=wait_range)
        data: pd.DataFrame = scraper.scrape_reddit( sub, coin)
        
```

