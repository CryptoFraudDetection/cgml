---
jupyter: python3
---

```{python}
import pandas as pd
import pickle
import random
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

driver = webdriver.Firefox()
```

```{python}
cookies_file = "cookies.pkl"
limit = 5
url = f"https://old.reddit.com/r/CryptoCurrency/search?q=Terra+Luna&restrict_sr=on&sort=new&t=all&limit={limit}"
```

Load cookies

```{python}
driver.get("about:blank")  # Open a blank page to set cookies

try:
    with open(cookies_file, "rb") as file:
        cookies = pickle.load(file)
        for cookie in cookies:
            driver.add_cookie(cookie)
    print("Cookies loaded successfully.")
except FileNotFoundError:
    print("No cookies file found. Proceeding without loading cookies.")
```

Acess the page

```{python}
driver.get(url)
time.sleep(3)
```

Wait for the page to load

```{python}
try:
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, '//header[@class="search-result-header"]'))
    )
    print("Search results are loaded.")
except Exception as e:
    print(f"Error waiting for search results to load: {e}")
    driver.quit()
```

Extract data

```{python}
post_data = []

try:
    link_elements = driver.find_elements(By.XPATH, '//a[contains(@class, "search-title")]')
    for link_element in link_elements:
        href = link_element.get_attribute('href')
        title = link_element.text
        post_data.append({'Title': title, 'URL': href})
except Exception as e:
    print(f"Error extracting post URLs: {e}")
```

Store cookies

```{python}
with open(cookies_file, "wb") as file:
    pickle.dump(driver.get_cookies(), file)
    print("Cookies saved successfully.")
```

```{python}
driver.quit()
```

```{python}
df = pd.DataFrame(post_data)

print(df.shape)
print(df.head())
```

